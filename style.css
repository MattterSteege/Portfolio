img {
    /* no select etc */
    user-select: none;
    pointer-events: none;
}

body, body.light {
    --scaler: 0.7; /* Scale the grid */
    --gap: 50px; /* Gap between the cells */
    --cells: 4; /* Amount of cells in the grid */
    --grid-size: min(calc(((90vh * var(--scaler)) / var(--cells))), calc(((90vw * var(--scaler)) / var(--cells)))); /* Size of the cells */
    --line-color: #666; /* Color of the walls */
    --floor-color: #a6a5a5; /* Color of the floor */
    --anim-speed: 1s; /* Animation speed */
    --background-animation: 25s; /* Background animation speed */

    /*** Colors ***/
    --lighter-background: #fdfbd4;
    --light-background: #fec473;
    --dark-background: #ffbe6a;
    --darker-background: #fe9833;
    margin: 0;
    padding: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    overflow: hidden;

    font-family: "Pixelify Sans", sans-serif;
    font-optical-sizing: auto;
    font-weight: 400;
    font-style: normal;
}

body.dark {
    /*** Colors ***/
    --lighter-background: #1a1a1a;
    --light-background: #2a2a2a;
    --dark-background: #3a3a3a;
    --darker-background: #4a4a4a;
}

body.squares {
    /*background-color: #e5e5f7;*/
    /*4 sqaures (0,0),(1,0),(0,1),(1,1) where 2 colors are used (--light and --dark*/
    background: repeating-conic-gradient(var(--light-background) 0% 25%, var(--dark-background) 0% 50%);
    background-position: 0 0, 10px 10px;
    background-size: 12.5vw 12.5vw;
    image-rendering: pixelated;

    opacity: 0;
    transition: opacity .5s, background .5s;
}

body.animate {
    /*animation: background var(--background-animation) cubic-bezier(.25,0,.5,.5) , background var(--background-animation) linear var(--background-animation) infinite;*/
    /* pointer-events: none; */
    /* user-select: none; */
}

@media screen and (max-width: 1000px)
{
    body {
        --scaler: 0.8; /* Scale the grid */
        --gap: 10px; /* Gap between the cells */
        --cells: 4; /* Amount of cells in the grid */
    }
}

@keyframes background {
    0% {
        background-position: 0vw 0vw;
    }
    100% {
        background-position: 12.5vw 12.5vw;
    }
}

.grid {
    position: fixed;
    width: min(calc((90vh * var(--scaler)) + var(--gap) * (var(--cells) - 1)), calc((90vw * var(--scaler)) + var(--gap) * (var(--cells) - 1)));
    height: min(calc((90vh * var(--scaler)) + var(--gap) * (var(--cells) - 1)), calc((90vw * var(--scaler)) + var(--gap) * (var(--cells) - 1)));
    transform: rotateX(60deg) rotateZ(45deg);
    transform-origin: 50% 50%;

    /* generate the isometric grid with gap */
    background-image:
            linear-gradient(0deg, var(--line-color) 1px, transparent 0), /* Horizontal line at the edge */
            linear-gradient(90deg, var(--line-color) 1px, transparent 0); /* Vertical line at the edge */

    background-size: calc(var(--grid-size) + var(--gap)) calc(var(--grid-size) + var(--gap)); /* Account for gap */
    background-color: var(--floor-color);
    background-position: 0 0, 0 0;
    border: 2px solid #000;
    translate: 0 -50%;
    top: 55%;
    transition: top var(--anim-speed);
    box-shadow: 50px 50px var(--darker-background);
    z-index: 10000;
    animation: hover 5s infinite ease-in-out;
}

.grid::after {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    background-image:
            linear-gradient(0deg, var(--line-color) 1px, transparent 0), /* Horizontal line at the edge */
            linear-gradient(90deg, var(--line-color) 1px, transparent 0); /* Vertical line at the edge */

    background-size: calc(var(--grid-size) + var(--gap)) calc(var(--grid-size) + var(--gap)); /* Account for gap */
    background-position: calc(-1 * var(--gap)) calc(-1 * var(--gap)), calc(-1 * var(--gap)) calc(-1 * var(--gap));
    transform-origin: 50% 50%;
    border: 2px solid #000;
}

.grid .cell {
    width: calc(var(--grid-size));
    height: calc(var(--grid-size));
    display: flex;
    justify-content: flex-start;
    align-items: flex-start;
    color: #fff;
    font-size: 24px;
    position: fixed;
}


.cells {
    /*width = 868 when not rotated*/
    /*height = 868 when not rotated*/
    /*width = 1227.54 when rotated*/
    /*height = 613.77 when rotated*/

    /*that means that the (90vw * var(--scaler)) has to be multiplied by 1.41421356237 to get the correct width*/
    /*that means that the (90vw * var(--scaler)) has to be multiplied by 0.70710678118 to get the correct height*/

    --width: min(calc(((90vw* var(--scaler)) + var(--gap)*(var(--cells) - 1)) * 1.41421356237), calc(((90vh* var(--scaler)) + var(--gap)*(var(--cells) - 1))* 1.41421356237));
    --height: min(calc(((90vw* var(--scaler)) + var(--gap)*(var(--cells) - 1)) * 0.70710678118), calc(((90vh* var(--scaler)) + var(--gap)*(var(--cells) - 1))* 0.70710678118));

    position: fixed;
    width: var(--width);
    height: var(--height);
    top: 55%;
    left: 50%;
    transform: translate(-50%, -50%);
    transition: all var(--anim-speed);
    z-index: 100000;
}

.cells.animate {
    animation: down calc(2 * var(--anim-speed)) forwards;
}

.cells.unanimate {
    animation: up calc(2 * var(--anim-speed)) forwards;
}

@keyframes down {
    0% {
        width: var(--width);
    }
    50% {
        width: var(--width);
    }
    100% {
        width: 100%;
    }
}

@keyframes up {
    0% {
        width: 100%;
    }
    50% {
        width: var(--width);
    }
    51%, 100% {
        width: var(--width);
    }
}

.cells .cell {
    width: calc(var(--grid-size)* 1.41421356237);
    height: calc(var(--grid-size)* 0.70710678118 * 2);
    display: flex;
    justify-content: flex-start;
    align-items: flex-start;
    color: #fff;
    font-size: 24px;
    translate: calc(var(--grid-size)* -1.41421356237 / 2) calc(var(--grid-size)* -0.70710678118 * 2 / 2);
    /* clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%); */
    transition: transform var(--anim-speed), background var(--anim-speed), opacity var(--anim-speed), width var(--anim-speed), height var(--anim-speed), top var(--anim-speed), left var(--anim-speed);
    position: fixed;
}

.hover-cover {
    position: absolute;
    width: 100%;
    height: 100%;
    top: -1vw;
    left: -1vw;
    background: radial-gradient(transparent, yellow);
    opacity: 0;
    transition: opacity var(--anim-speed);
    clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
    z-index: -1;
    padding: 1vw;
}

.cells .cell:hover:not(.selected) .hover-cover {
    opacity: 50%;
    animation: fadeIn var(--anim-speed) forwards, pulse calc(4 * var(--anim-speed)) infinite var(--anim-speed);
}


.cells .cell.up {}
.cells .cell.down {}


@keyframes fadeIn {
    0% {
        opacity: 0;
    }
    100% {
        opacity: 50%;
    }
}

@keyframes pulse {
    0% {
        transform: scale(1);
        opacity: 0.5;
    }
    66% {
        transform: scale(1.05);
        opacity: 0.75;
    }
    100% {
        transform: scale(1);
        opacity: 0.5;
    }
}

.cells .cell:hover {
    transform: translateY(-50px); /* Simplified for testing */
}


.cells .cell img {
    width: 100%;
    height: 100%;
    image-rendering: pixelated;
    translate: 0% 0%;
}

.cells .cell.selected {
    z-index: 1000 !important;
    opacity: 1 !important;
    pointer-events: none;
    width: calc(var(--grid-size) * 1.41421356237 * 1.5);
    height: calc(var(--grid-size) * 0.70710678118 * 2 * 1.5);
    left: 75vw !important;
    top: 50% !important;
    translate: -35% -50%;
    transition: transform calc(2* var(--anim-speed)), width calc(2* var(--anim-speed)), height calc(2* var(--anim-speed)), opacity calc(2* var(--anim-speed)), left calc(2* var(--anim-speed)), top calc(2* var(--anim-speed)), translate calc(2* var(--anim-speed));
}


.cells .cell.unselected {
    opacity: 0 !important;
    pointer-events: none;
    transform: translate(0, 100vh);
}

.warning-screen-to-small
{
    display: none;
}

.buttons {
    position: fixed;
    top: 0;
    left: 0;
    padding: 12px;
    z-index: 1000000000;
}

.buttons #backButton {
    width: 72px;
    height: 72px;
    background: transparent;
    border: transparent;
    cursor: pointer;
    transform: translateY(-128px);
    transition: transform var(--anim-speed);
    background-image: url("images/ProjectCubes/back.png");
    background-size: 72px 72px;
    image-rendering: pixelated;
}

.buttons #backButton:hover {
    transform: scale(1.1) !important;
}

.iconPlaceholder {
    position: fixed;
    width: 20vw;
    height: 20vw;
    border: 10px solid red;
    z-index: 100000000;
    top: 50vh;
    right: 10vw;
    transform: translateY(-50%);
}

.ui {
    position: fixed;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    pointer-events: none;
    box-shadow: 0 0 2.5vw 2.5vw var(--light-background) inset;
    z-index: 10000000;
}

.ui::after {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    box-shadow: 0 0 0 0.5vw var(--darker-background) inset;
}

@keyframes hover {
    0% {
        box-shadow: 50px 50px var(--darker-background);
    }
    50% {
        box-shadow: 40px 40px var(--darker-background);
    }
    100% {
        box-shadow: 50px 50px var(--darker-background);
    }
}

.project-header {
    width: 50vw;
    left: 25vw;
    position: fixed;
    height: 5vw;
    display: flex;
    justify-content: center;
    align-items: center;
    transform: translateY(0);
    transition: transform var(--anim-speed), width var(--anim-speed), left var(--anim-speed);
}

.project-header.active {
    width: 50%;
    position: fixed;
    left: calc(50px + 2rem);
}

.project-description {
    opacity: 1;
    transition: opacity var(--anim-speed);
    width: 50%;
    font-family: 'Inter', sans-serif;
    font-size: 1rem;
    line-height: 1.6;
    color: black;
    background: var(--lighter-background);
    border: 6px solid var(--darker-background);
    position: fixed;
    top: 10vh;
    left: 50px;
    padding: 2rem;
    height: 80vh;
    overflow-y: auto;
    border-radius: 10px;
    z-index: 10000;
}

@media screen and (max-width: 1000px)
{
    .project-description {
        width: calc(100vw - 112px - 4rem);
    }

    .project-header.active {
        width: 100%;
        position: fixed;
        left: 0;
    }

}

.project-header.hidden {
    transform: translateY(-100px);
}

.project-description.hidden {
    opacity: 0;
}